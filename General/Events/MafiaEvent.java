package Mafia.General.Events;

//! \brief Основной класс события, от которого должны наследоваться все события
public class MafiaEvent {
    //! \brief Источник события. Предполагается, что класс, который создает событие, будет передавать туда  this.
    private Object source;

    //! \brief Пустой конструктор, который задает пустой источник события
    public MafiaEvent(){
        source = null;
    }

    //! \brief Конструктор, который задает источник события
    public MafiaEvent(Object source){
        this.source = source;
    }

    /*! \brief Недостаточно просто создать событие. Необходимо еще его вызвать. Раньше я хотел сделать, чтобы событие автоматически вызывало себя в конструкторе,
    но есть некоторая проблема с тем, что когда завершается конструктор родительского класса, конструктор наследника только начинается. И если в этот момент событие будет происходить,
    то его поля, которые есть в наследнике, все будут null. Поэтому я передаю управление моментом вызова события тем, кто использует это событие. К тому же это дает большую гибкость.
     */
    public void occur(){
        EventsManager.register_event(this);
    }

    //! \brief Возвращает источник события
    public Object get_source(){
        return source;
    }

}
